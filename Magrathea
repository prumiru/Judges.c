#include <stdio.h>
#include <stdlib.h>
#include <string.h>

struct Judge {
    char name[50];
    char gender[10];
    char affiliation[100];
    char title[100];
    char expertise[100];
    char email[100];
    char phone[15];
};

int main() {
    int MAX_JUDGES, SELECTED_JUDGES;
    char project_name[100];

    // 프로젝트 이름 입력
    printf("참여 프로젝트: ");
    fgets(project_name, sizeof(project_name), stdin);
    project_name[strcspn(project_name, "\n")] = 0;

    // 심사 풀 인원과 선발 멤버 수 입력
    printf("심사 풀 인원 수를 입력하세요: ");
    scanf_s("%d", &MAX_JUDGES);
    printf("선발 멤버 수를 입력하세요: ");
    scanf_s("%d", &SELECTED_JUDGES);
    getchar(); // 버퍼 비우기

    // 동적 메모리 할당
    struct Judge* judges_array = (struct Judge*)malloc(MAX_JUDGES * sizeof(struct Judge));
    if (judges_array == NULL) {
        printf("메모리 할당 실패\n");
        return 1;
    }

    int judge_count = 0;
    printf("++++++++++++++++++++++++++++++++++++\n");
    printf("%s 프로젝트의 심사자 정보 입력을 시작합니다.\n", project_name);
    printf("++++++++++++++++++++++++++++++++++++\n");

    while (judge_count < MAX_JUDGES) {
        printf("* 심사자 %d: ", judge_count + 1);

        // 심사자 정보 입력
        printf("이름: ");
        fgets(judges_array[judge_count].name, sizeof(judges_array[judge_count].name), stdin);
        judges_array[judge_count].name[strcspn(judges_array[judge_count].name, "\n")] = 0;

        printf("성별: ");
        fgets(judges_array[judge_count].gender, sizeof(judges_array[judge_count].gender), stdin);
        judges_array[judge_count].gender[strcspn(judges_array[judge_count].gender, "\n")] = 0;

        printf("소속: ");
        fgets(judges_array[judge_count].affiliation, sizeof(judges_array[judge_count].affiliation), stdin);
        judges_array[judge_count].affiliation[strcspn(judges_array[judge_count].affiliation, "\n")] = 0;

        printf("직함: ");
        fgets(judges_array[judge_count].title, sizeof(judges_array[judge_count].title), stdin);
        judges_array[judge_count].title[strcspn(judges_array[judge_count].title, "\n")] = 0;

        printf("전문 분야: ");
        fgets(judges_array[judge_count].expertise, sizeof(judges_array[judge_count].expertise), stdin);
        judges_array[judge_count].expertise[strcspn(judges_array[judge_count].expertise, "\n")] = 0;

        printf("메일: ");
        fgets(judges_array[judge_count].email, sizeof(judges_array[judge_count].email), stdin);
        judges_array[judge_count].email[strcspn(judges_array[judge_count].email, "\n")] = 0;

        printf("전화: ");
        fgets(judges_array[judge_count].phone, sizeof(judges_array[judge_count].phone), stdin);
        judges_array[judge_count].phone[strcspn(judges_array[judge_count].phone, "\n")] = 0;

        judge_count++;
    }

    printf("\n++++++++++++++++++++++++++++++++++++\n");
    printf("심사자 풀 입력이 끝났습니다.\n");
    printf("++++++++++++++++++++++++++++++++++++\n");

    // 심사자 풀 확인 여부
    char confirm;
    printf("[%s] 심사자 풀을 확인할까요? (Y/N): ", project_name);
    scanf_s(" %c", &confirm, 1);
    getchar(); // 버퍼 비우기

    if (confirm == 'Y' || confirm == 'y') {
        printf("####################################\n");
        printf("#       심사자 풀 데이터 출력       #\n");
        printf("####################################\n");

        for (int i = 0; i < MAX_JUDGES; i++) {
            printf("[심사자 %d]\n", i + 1);
            printf("이름: %s\n", judges_array[i].name);
            printf("성별: %s\n", judges_array[i].gender);
            printf("소속: %s\n", judges_array[i].affiliation);
            printf("직함: %s\n", judges_array[i].title);
            printf("전문 분야: %s\n", judges_array[i].expertise);
            printf("메일: %s\n", judges_array[i].email);
            printf("전화: %s\n", judges_array[i].phone);
            printf("-----------------------------------\n");
        }
    }
    else {
        printf("프로그램을 종료합니다.\n");
    }

    // 동적 메모리 해제
    free(judges_array);
    return 0;
}
